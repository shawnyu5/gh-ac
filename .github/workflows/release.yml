name: Generate release

on:
  push:
    branches:
      - master
      # TODO: remove this before merging to master
      - dev
    paths:
      - "src/**"
      - ".github/**"

  pull_request:
    branches:
      - master
    paths:
      - "src/**"
      - ".github/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # with:
        #   fetch-depth: 0

      - run: ls -l
      # - run: sudo chmod ugo+rwX .

      - uses: codfish/semantic-release-action@v2
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install toml-cli
        run: |
          wget https://github.com/gnprice/toml-cli/releases/download/v0.2.3/toml-0.2.3-x86_64-linux.tar.gz
          tar -xvf toml-0.2.3-x86_64-linux.tar.gz
          mv toml-0.2.3-x86_64-linux/toml .

      - name: Update version in Cargo.toml
        if: steps.semantic_release.outputs.new-release-published == 'true'
        run: |
          ./toml set Cargo.toml package.version ${{ steps.semantic_release.outputs.release-version }} | tee Cargo.toml

      # - name: Update version in Cargo.toml
      #   if: steps.semantic_release.outputs.new-release-published == 'true'
      #   uses: ciiiii/toml-editor@1.0.0
      #   with:
      #     file: "Cargo.toml"
      #     key: "package.version"
      #     value: ${{ steps.semantic_release.outputs.release-version }}

      # - run: sudo chmod ugo+rwX .
      # - run: ls -la

      # - name: Build project
      #   run: cargo build --release

      - run: ls -l

      - name: Compile project
        uses: cli/gh-extension-precompile@v1
        with:
          build_script_override: "script/build.sh"

      - run: ls -l

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "noreply@github.action.com"
          git add Cargo.* package.json
          git commit -m "chore(AUTO): update app version [skip ci]"
          git push origin ${{ github.ref_name }}

      # - name: Commit changes
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: "chore(AUTO): update app version [skip ci]"
      #     branch: ${{ github.ref_name }}
      #     create_branch: false
